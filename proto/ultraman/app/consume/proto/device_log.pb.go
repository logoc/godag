// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: device_log.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_STAT_INFO     EventType = 0
	EventType_TRIGGER_EVENT EventType = 1
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "STAT_INFO",
		1: "TRIGGER_EVENT",
	}
	EventType_value = map[string]int32{
		"STAT_INFO":     0,
		"TRIGGER_EVENT": 1,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_device_log_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_device_log_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_device_log_proto_rawDescGZIP(), []int{0}
}

type DeviceLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common       *Common           `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	CarStatInfo  *CarStatInfo      `protobuf:"bytes,2,opt,name=car_stat_info,json=carStatInfo,proto3" json:"car_stat_info,omitempty"`
	TriggerEvent *TriggerEvent     `protobuf:"bytes,3,opt,name=trigger_event,json=triggerEvent,proto3" json:"trigger_event,omitempty"`
	Staurn5      *Saturn5          `protobuf:"bytes,100,opt,name=staurn5,proto3" json:"staurn5,omitempty"`
	Ext          map[string]string `protobuf:"bytes,101,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeviceLog) Reset() {
	*x = DeviceLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceLog) ProtoMessage() {}

func (x *DeviceLog) ProtoReflect() protoreflect.Message {
	mi := &file_device_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceLog.ProtoReflect.Descriptor instead.
func (*DeviceLog) Descriptor() ([]byte, []int) {
	return file_device_log_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceLog) GetCommon() *Common {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *DeviceLog) GetCarStatInfo() *CarStatInfo {
	if x != nil {
		return x.CarStatInfo
	}
	return nil
}

func (x *DeviceLog) GetTriggerEvent() *TriggerEvent {
	if x != nil {
		return x.TriggerEvent
	}
	return nil
}

func (x *DeviceLog) GetStaurn5() *Saturn5 {
	if x != nil {
		return x.Staurn5
	}
	return nil
}

func (x *DeviceLog) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

type Common struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId     string    `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DeviceId      string    `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Timestamp     uint64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PpmId         string    `protobuf:"bytes,4,opt,name=ppm_id,json=ppmId,proto3" json:"ppm_id,omitempty"`
	EventType     EventType `protobuf:"varint,5,opt,name=event_type,json=eventType,proto3,enum=fleet.sdk.proto.EventType" json:"event_type,omitempty"`
	OtaVersion    string    `protobuf:"bytes,6,opt,name=ota_version,json=otaVersion,proto3" json:"ota_version,omitempty"`
	DeviceUseType string    `protobuf:"bytes,8,opt,name=device_use_type,json=deviceUseType,proto3" json:"device_use_type,omitempty"`
	DeviceName    string    `protobuf:"bytes,9,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
}

func (x *Common) Reset() {
	*x = Common{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Common) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common) ProtoMessage() {}

func (x *Common) ProtoReflect() protoreflect.Message {
	mi := &file_device_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common.ProtoReflect.Descriptor instead.
func (*Common) Descriptor() ([]byte, []int) {
	return file_device_log_proto_rawDescGZIP(), []int{1}
}

func (x *Common) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Common) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Common) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Common) GetPpmId() string {
	if x != nil {
		return x.PpmId
	}
	return ""
}

func (x *Common) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_STAT_INFO
}

func (x *Common) GetOtaVersion() string {
	if x != nil {
		return x.OtaVersion
	}
	return ""
}

func (x *Common) GetDeviceUseType() string {
	if x != nil {
		return x.DeviceUseType
	}
	return ""
}

func (x *Common) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type Saturn5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Saturn5) Reset() {
	*x = Saturn5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Saturn5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Saturn5) ProtoMessage() {}

func (x *Saturn5) ProtoReflect() protoreflect.Message {
	mi := &file_device_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Saturn5.ProtoReflect.Descriptor instead.
func (*Saturn5) Descriptor() ([]byte, []int) {
	return file_device_log_proto_rawDescGZIP(), []int{2}
}

var File_device_log_proto protoreflect.FileDescriptor

var file_device_log_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x02, 0x0a, 0x09, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x61, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x0d, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x32, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x75, 0x72, 0x6e, 0x35, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x35, 0x52, 0x07, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x6e, 0x35, 0x12, 0x35, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x2e, 0x45, 0x78, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x78, 0x74, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x78,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x9e, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x70, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x70, 0x6d, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x74, 0x61,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x53, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x35, 0x2a, 0x2d,
	0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x54, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x52,
	0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x42, 0x22, 0x5a,
	0x20, 0x75, 0x6c, 0x74, 0x72, 0x61, 0x6d, 0x61, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_device_log_proto_rawDescOnce sync.Once
	file_device_log_proto_rawDescData = file_device_log_proto_rawDesc
)

func file_device_log_proto_rawDescGZIP() []byte {
	file_device_log_proto_rawDescOnce.Do(func() {
		file_device_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_device_log_proto_rawDescData)
	})
	return file_device_log_proto_rawDescData
}

var file_device_log_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_device_log_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_device_log_proto_goTypes = []any{
	(EventType)(0),       // 0: fleet.sdk.proto.EventType
	(*DeviceLog)(nil),    // 1: fleet.sdk.proto.DeviceLog
	(*Common)(nil),       // 2: fleet.sdk.proto.Common
	(*Saturn5)(nil),      // 3: fleet.sdk.proto.Saturn5
	nil,                  // 4: fleet.sdk.proto.DeviceLog.ExtEntry
	(*CarStatInfo)(nil),  // 5: fleet.sdk.proto.CarStatInfo
	(*TriggerEvent)(nil), // 6: fleet.sdk.proto.TriggerEvent
}
var file_device_log_proto_depIdxs = []int32{
	2, // 0: fleet.sdk.proto.DeviceLog.common:type_name -> fleet.sdk.proto.Common
	5, // 1: fleet.sdk.proto.DeviceLog.car_stat_info:type_name -> fleet.sdk.proto.CarStatInfo
	6, // 2: fleet.sdk.proto.DeviceLog.trigger_event:type_name -> fleet.sdk.proto.TriggerEvent
	3, // 3: fleet.sdk.proto.DeviceLog.staurn5:type_name -> fleet.sdk.proto.Saturn5
	4, // 4: fleet.sdk.proto.DeviceLog.ext:type_name -> fleet.sdk.proto.DeviceLog.ExtEntry
	0, // 5: fleet.sdk.proto.Common.event_type:type_name -> fleet.sdk.proto.EventType
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_device_log_proto_init() }
func file_device_log_proto_init() {
	if File_device_log_proto != nil {
		return
	}
	file_stat_info_proto_init()
	file_trigger_report_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_device_log_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DeviceLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_log_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Common); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_log_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Saturn5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_device_log_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_device_log_proto_goTypes,
		DependencyIndexes: file_device_log_proto_depIdxs,
		EnumInfos:         file_device_log_proto_enumTypes,
		MessageInfos:      file_device_log_proto_msgTypes,
	}.Build()
	File_device_log_proto = out.File
	file_device_log_proto_rawDesc = nil
	file_device_log_proto_goTypes = nil
	file_device_log_proto_depIdxs = nil
}
